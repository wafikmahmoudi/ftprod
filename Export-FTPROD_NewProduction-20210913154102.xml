<?xml version="1.0" encoding="UTF-8"?>
<Export generator="IRIS" version="26" zv="IRIS for UNIX (Ubuntu Server LTS for x86-64) 2021.1 (Build 215U)" ts="2021-09-13 15:41:22">
<Project name="EnsExportProduction_2021-09-13 15-41-02_535+0" LastModified="2021-09-13 15:41:22.944638">
  <ProjectDescription>Studio Project generated from Production 'FTPROD.NewProduction' at 2021-09-13 15:41:02.535 UTC</ProjectDescription>
  <Items>
    <ProjectItem name="User.FHIRORGIDS" type="CLS"></ProjectItem>
    <ProjectItem name="User.FTProdService" type="CLS"></ProjectItem>
    <ProjectItem name="Settings:User.FTProdService.PTD" type="PTD"></ProjectItem>
    <ProjectItem name="EnsExportNotes.EnsExportProduction_2021-09-13 15-41-02_535+0.PTD" type="PTD"></ProjectItem>
  </Items>
</Project>


<Class name="User.FHIRORGIDS">
<Super>%Persistent</Super>
<TimeChanged>66000,53108.979352</TimeChanged>
<TimeCreated>66000,53107.341641</TimeCreated>

<Property name="OrgID">
<Type>%Library.String</Type>
<SqlColumnNumber>2</SqlColumnNumber>
<SqlFieldName>Org_ID</SqlFieldName>
<Parameter name="MAXLEN" value="100"/>
</Property>

<Parameter name="USEEXTENTSET">
<Default>1</Default>
</Parameter>

<Index name="DDLBEIndex">
<Description>
Bitmap Extent Index auto-generated by DDL CREATE TABLE statement.  Do not edit the SqlName of this index.</Description>
<Type>bitmap</Type>
<Extent>1</Extent>
<SqlName>%%DDLBEIndex</SqlName>
</Index>

<Storage name="Default">
<Type>%Storage.Persistent</Type>
<DataLocation>^poCN.y1rJ.1</DataLocation>
<DefaultData>FHIRORGIDSDefaultData</DefaultData>
<IdLocation>^poCN.y1rJ.1</IdLocation>
<IndexLocation>^poCN.y1rJ.I</IndexLocation>
<StreamLocation>^poCN.y1rJ.S</StreamLocation>
<ExtentLocation>^poCN.y1rJ</ExtentLocation>
<Data name="FHIRORGIDSDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>OrgID</Value>
</Value>
</Data>
<Index name="DDLBEIndex">
<Location>^poCN.y1rJ.2</Location>
</Index>
<Index name="IDKEY">
<Location>^poCN.y1rJ.1</Location>
</Index>
</Storage>
</Class>


<Class name="User.FTProdService">
<Super>Ens.BusinessService</Super>
<TimeChanged>66000,56247.632455</TimeChanged>
<TimeCreated>66000,53124.849542</TimeCreated>

<Parameter name="ADAPTER">
<Default>Ens.InboundAdapter</Default>
</Parameter>

<Property name="FHIRENDPOINT">
<Type>%String</Type>
</Property>

<Parameter name="SETTINGS">
<Default>FHIRENDPOINT:Basic</Default>
</Parameter>

<Method name="OnProcessInput">
<FormalSpec>pInput:%Stream.Object,*pOutput:%Stream.Object</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[

   $$$LOGINFO("Starting Getting FHIR Data..." )
   set TSC=1
   
 /*********** Create a HTTP Request (GET) *************/
  try { 
  set exist = 0
    
     set httprequest = ##class(%Net.HttpRequest).%New()
     set HttpResponse = ##class(%Net.HttpResponse).%New()
     set httprequest.Https = 1
     set httprequest.ContentType  = "application/fhir+json"
     set httprequest.ContentCharset ="UTF-8"
     set httprequest.Server ="fhir-server.d3.synodis.ftprod.fr"
     $$$LOGINFO("Setting Request to FTPROD server..." )
     set httprequest.SSLConfiguration ="TestAsma"  
     set status = httprequest.Get("/fhir/Organization?_count=4")  
     Set Result = [].%FromJSON(httprequest.HttpResponse.Data)
     Set dataftprod = Result.%ToJSON()
     $$$LOGINFO("Data from FTPROD : " _dataftprod)

   // Get all IDs of posted resources from table FHIR_ORG_IDS
    SET myquery="SELECT distinct * FROM SQLUser.FHIRORGIDS"
    SET tStatement = ##class(%SQL.Statement).%New()
    SET qStatus = tStatement.%Prepare(myquery)
      $$$LOGINFO("qStatus : " _qStatus)
    
    


   
   // GET RESQUEST
   //DONE :  Make iterator on the json data of FTPROD
   // if id exist in the table ==>do not post on iris server 
   // if id does not exist in the table ==> post on iris server 
   Set clientObj = ##class(HS.FHIRServer.RestClient.FHIRService).CreateInstance(..FHIRENDPOINT)
   Do clientObj.SetResponseFormat("JSON")
   set entries=Result."entry"
   set iter = entries.%GetIterator()
   set pointer=0
   set exist=0
   while iter.%GetNext(.key, .value) { 
      //$$$LOGINFO("Entry :"_key)
      $$$LOGINFO("Conversion... ")
      set jsonData2=value."resource"
      set id=jsonData2."id"
      $$$LOGINFO("Organization ID from FTPROD : " _id)
      $$$LOGINFO("Content Data from FTPROD :"_value.%ToJSON()_"/  ")
      Set d=jsonData2.%Remove("endpoint")
      //on peut pas poster un id de l'organisation il faut le supprimer
      $$$LOGINFO("After removing endpoint : " _jsonData2.%ToJSON()) 
      
      

      //Before Posting on iris server : verify if the organization id exist in the table = already posted
      SET rset = tStatement.%Execute()
      $$$LOGINFO("Testing existence for "_id)
      WHILE ( rset.%Next() ){
      $$$LOGINFO("Org_ID :         "_rset.%Get("Org_ID"))
      $$$LOGINFO("id :   "_id)
      
       //if ($ZCONVERT($CHAR(rset.%Get("Org_ID")),"U")=$ZCONVERT($CHAR(id),"U")) 
       
         if (rset.%Get("Org_ID") = id) 
         {
        set exist=1
        
        }
      }
        
        $$$LOGINFO("Exist for "_id_"="_exist )

      

      //IF ID exist in the table ==> DO NOT POST REQUEST 
      //ELSE POST new resource  in the server
      IF exist=1 { }
      ELSE{
        $$$LOGINFO("Posting on server exist=false..")
      set requestpost = ##class(HS.FHIRServer.API.Data.Request).%New()
      set requestpost.RequestPath = "/Organization"
      set requestpost.RequestMethod = "POST"
      $$$LOGINFO("Posting on server 2..")
      set requestpost.Json = jsonData2
      $$$LOGINFO("Posting on server 3..")
      set clientResponseObjpost=clientObj.InvokeRequest(requestpost)
      $$$LOGINFO("Posting on server 4..")
      Set FhirDatapost=clientResponseObjpost.Json
      $$$LOGINFO("Posting on server 5..")
      Set textpost = FhirDatapost
      $$$LOGINFO("Posting on server 6..")
       $$$LOGINFO(id_" is posted to the server ") 
       set pointer=pointer+1

       //Insert posted Id into server for farther tests
        SET myquery2="INSERT INTO SQLUser.FHIRORGIDS values(?)"
        SET tStatement2 = ##class(%SQL.Statement).%New()
        SET qStatus2 = tStatement2.%Prepare(myquery2)
        SET rset2 = tStatement2.%Execute(id)

      }
      set exist=0
     
   }  

   $$$LOGINFO(pointer_" organizations were added to the server")

 


     
     Quit:$$$ISERR(status)
     }
     
   Catch ex {
	Set tSC= ex.AsStatus()
	}

	Quit TSC
]]></Implementation>
</Method>
</Class>


<Document name="EnsExportNotes.EnsExportProduction_2021-09-13 15-41-02_535+0.PTD"><ProjectTextDocument name="EnsExportNotes.EnsExportProduction_2021-09-13 15-41-02_535+0" description="Export Notes for export EnsExportProduction_2021-09-13 15-41-02_535+0">
<![CDATA[<Deployment>
<Creation>
<Machine>VM-FRE-TESTDPLMNT-FC.OMBMZRXPXFSUXJ13GJ2ED1JFCA.PARX.INTERNAL.CLOUDAPP.NET</Machine>
<Instance>IRISHEALTH_FRETEST_1</Instance>
<Namespace>FMEFHIRV2</Namespace>
<SourceProduction>FTPROD.NewProduction</SourceProduction>
<Username>WafikMA-IRIS</Username>
<UTC>2021-09-13 15:41:22.814</UTC>
</Creation>
<Notes>
</Notes>
<Contents>
<ExportProject>EnsExportProduction_2021-09-13 15-41-02_535+0</ExportProject>
<Item num="1">Settings:User.FTProdService.PTD</Item>
<Item num="2">User.FHIRORGIDS.CLS</Item>
<Item num="3">User.FTProdService.CLS</Item>
</Contents>
<ProductionClassInExport></ProductionClassInExport>
</Deployment>

]]></ProjectTextDocument>
</Document>

<Document name="Settings:User.FTProdService.PTD"><ProjectTextDocument name="Settings:User.FTProdService" description="Settings for User.FTProdService in Production FTPROD.NewProduction">
<![CDATA[<Item Name="User.FTProdService" Category="" ClassName="User.FTProdService" PoolSize="1" Enabled="false" Foreground="false" Comment="" LogTraceEvents="false" Schedule=""><Setting Target="Host" Name="FHIRENDPOINT">/csp/healthshare/fmefhirv2/fhir/r4</Setting></Item>
]]></ProjectTextDocument>
</Document></Export>
